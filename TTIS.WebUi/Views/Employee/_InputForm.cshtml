@using Nancy.Json
@using Microsoft.Extensions.Options;
@using TTIS.WebUi.Configuration;
@inject IOptions<TtsiApi> ttsiApi


@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model MasEmployee

@{
    ViewBag.Title = "Employee";

    List<SelectListItem> lstDepartments = new List<SelectListItem>();
    lstDepartments.Add(new SelectListItem { Value = "", Text = "- Select One -" });
    foreach (MasDepartment oDepartment in new JavaScriptSerializer().Deserialize<List<MasDepartment>>(HttpContextAccessor.HttpContext.Session.GetString("Departments")))
    {
        lstDepartments.Add(new SelectListItem { Value = oDepartment.DepartmentId.ToString(), Text = oDepartment.Name });
    }

    List<SelectListItem> lstUnit = new List<SelectListItem>();
    lstUnit.Add(new SelectListItem { Value = "", Text = "- Select One -" });
    foreach (MasUnit oUnit in new JavaScriptSerializer().Deserialize<List<MasUnit>>(HttpContextAccessor.HttpContext.Session.GetString("Units")))
    {
        lstUnit.Add(new SelectListItem { Value = oUnit.UnitId.ToString(), Text = oUnit.Name });
    }

    List<SelectListItem> lstTitle = new List<SelectListItem>();
    lstTitle.Add(new SelectListItem { Value = "", Text = "- Select One -" });
    foreach (MasTitle oTitle in new JavaScriptSerializer().Deserialize<List<MasTitle>>(HttpContextAccessor.HttpContext.Session.GetString("Titles")))
    {
        lstTitle.Add(new SelectListItem { Value = oTitle.TitleId.ToString(), Text = oTitle.Name });
    }

    List<SelectListItem> lstEmployeeStatus = new List<SelectListItem>();
    lstEmployeeStatus.Add(new SelectListItem { Value = "", Text = "- Select One -" });
    foreach (MasEmployeeStatus oEmployeeDocumentType in new JavaScriptSerializer().Deserialize<List<MasEmployeeStatus>>(HttpContextAccessor.HttpContext.Session.GetString("EmployeeStatusList")))
    {
        lstEmployeeStatus.Add(new SelectListItem { Value = oEmployeeDocumentType.EmployeeStatusId.ToString(), Text = oEmployeeDocumentType.Name });
    }

    List<SelectListItem> lstGender = new List<SelectListItem>();
    lstGender.Add(new SelectListItem { Value = "", Text = "- Select One -" });
    lstGender.Add(new SelectListItem { Value = "F", Text = "Perempuan" });
    lstGender.Add(new SelectListItem { Value = "M", Text = "Laki - Laki" });

    List<SelectListItem> lstRegisterAs = new List<SelectListItem>();
    lstRegisterAs.Add(new SelectListItem { Value = "1", Text = "Standard Employee" });
    lstRegisterAs.Add(new SelectListItem { Value = "2", Text = "Driver" });
    lstRegisterAs.Add(new SelectListItem { Value = "3", Text = "Driver Assistant" });

    List<SelectListItem> lstYesNo = new List<SelectListItem>();
    lstYesNo.Add(new SelectListItem { Value = "true", Text = "- Yes -" });
    lstYesNo.Add(new SelectListItem { Value = "false", Text = "- No -" });
}
<style type="text/css">
    .image-preview-input {
        position: relative;
        overflow: hidden;
        margin: 0px;
        color: #333;
        background-color: #fff;
        border-color: #ccc;
    }

        .image-preview-input input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            font-size: 20px;
            cursor: pointer;
            opacity: 0;
            filter: alpha(opacity=0);
        }

    .image-preview-input-title {
        margin-left: 2px;
    }
</style>

@using (Html.BeginForm("PostAsync", "Employee", FormMethod.Post, new { id = "frmInput", enctype = "multipart/form-data", autocomplete = "off" }))
{
    <div class="modal-header">
        <h3>
            <i class="fa fa-user"></i>&nbsp;&nbsp;<span id="spnActionName"></span> @ViewBag.Title
        </h3>
    </div>

    <div class="modal-body" style="max-height: calc(100vh - 240px) !important; overflow-y: auto !important;">
        @Html.HiddenFor(model => model.EmployeeId)

        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-4 no-padding">
                            <div class="form-group col-md-12">
                                <label>
                                    Pas Photo
                                </label>
                                <img class="profile-user-img img-responsive" id="imgEmployee" style="width:100% !important; margin-bottom:10px !important" src="@Url.Content("~/Assets/dist/img/default/no_photo.png")" alt="Employee Photo">

                                <!-- image-preview-filename input [CUT FROM HERE]-->
                                <div id="usrImagePreview" class="input-group image-preview">
                                    @Html.TextBoxFor(model => model.PasPhoto, new { @class = "form-control image-preview-filename", @readonly = "true" })

                                    <span class="input-group-btn">
                                        <!-- image-preview-clear button -->
                                        <button id="btnClearEmployeePhoto" type="button" class="btn btn-default btn-flat image-preview-clear" style="display:none;">
                                            <span class="glyphicon glyphicon-remove"></span> Clear
                                        </button>
                                        <!-- image-preview-input -->
                                        <div class="btn btn-default btn-flat image-preview-input">
                                            <span class="glyphicon glyphicon-folder-open"></span>
                                            <span id="btnBrowseEmployeeTitle" class="image-preview-input-title">Browse</span>
                                            <input id="fileEmployeePhoto" type="file" accept="image/jpeg" name="fileEmployeePhoto" />
                                        </div>
                                    </span>

                                    <script>
                            $(function () {
                                // Create the close button
                                var closebtn = $('<button/>', {
                                    type: "button",
                                    text: 'x',
                                    id: 'close-preview-Employee-image',
                                    style: 'font-size: initial;',
                                });
                                closebtn.attr("class", "close pull-right");

                                // Set the popover default content
                                $('#usrImagePreview').popover({
                                    trigger: 'manual',
                                    html: true,
                                    title: "<strong>Preview</strong>" + $(closebtn)[0].outerHTML,
                                    content: "There's no image",
                                    placement: 'bottom'
                                });

                                // Clear event
                                $('#btnClearEmployeePhoto').click(function () {
                                    var img = $('#imgEmployee');

                                    img.attr('src', '@Url.Content("~/Assets/dist/img/default/no_photo.png")');
                                    $('#PasPhoto').val("");
                                    $('#btnClearEmployeePhoto').hide();
                                    $('#fileEmployeePhoto').val("");
                                    $('#btnBrowseEmployeeTitle').text("Browse");

                                });

                                // Create the preview image
                                $("#fileEmployeePhoto").change(function () {
                                    var img = $('#imgEmployee');
                                    var file = this.files[0];
                                    var reader = new FileReader();
                                    // Set preview image into the popover data-content
                                    reader.onload = function (e) {
                                        $('#btnBrowseEmployeeTitle').text("Change");
                                        $("#btnClearEmployeePhoto").show();
                                        $("#PasPhoto").val(file.name);
                                        img.attr('src', e.target.result);
                                    }
                                    reader.readAsDataURL(file);
                                });
                            });
                                    </script>

                                </div>
                                <!-- /input-group image-preview [TO HERE]-->
                            </div>
                        </div>

                        <div class="col-md-8 no-padding">
                            <div id="dvRegisterAs">
                                <div class="form-group col-md-6">
                                    <label>
                                        Register Employee As
                                    </label>
                                    @Html.DropDownListFor(model => model.RegisterAs, lstRegisterAs, new { @placeholder = "Register As", @class = "form-control" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>
                                        Register as User
                                    </label>
                                    @Html.DropDownListFor(model => model.RegisterAsUser, lstYesNo, new { @placeholder = "Register As User", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Tag Number
                                </label>
                                @Html.TextBoxFor(model => model.TagNumber, new { @placeholder = "Auto Generated", @class = "form-control" })
                            </div>
                            <div class="form-group col-md-8">
                                <label>
                                    Nama Panggilan
                                </label>
                                @Html.TextBoxFor(model => model.NickName, new { @placeholder = "Nama Panggilan", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Nama Depan
                                </label>
                                @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "Nama Depan", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Nama Tengah
                                </label>
                                @Html.TextBoxFor(model => model.MiddleName, new { @placeholder = "Nama Tengah", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Nama Belakang
                                </label>
                                @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Nama Belakang", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Tempat Lahir
                                </label>
                                @Html.TextBoxFor(model => model.PlaceOfBirth, new { @placeholder = "Tempat Lahir", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Tanggal Lahir
                                </label>
                                @Html.TextBoxFor(model => model.DateOfBirth, "{0:d MMM yyyy}", new { @placeholder = "Tanggal Lahir", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-4">
                                <label>
                                    Gender
                                </label>
                                @Html.DropDownListFor(model => model.Gender, lstGender, new { @placeholder = "Gender", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-6">
                                <label>
                                    Email
                                </label>
                                @Html.TextBoxFor(model => model.Email, new { @placeholder = "E-mail", @class = "form-control", @required = "true", })
                            </div>
                            <div class="form-group col-md-6">
                                <label>
                                    Phone Number
                                </label>
                                @Html.TextBoxFor(model => model.PhoneNumber, new { @placeholder = "Phone Number", @class = "form-control", @required = "true", })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="box box-primary">
                            <div class="box-header">
                                <label>Informasi Pekerjaan</label>
                            </div>
                            <div class="box-body no-padding">
                                <div class="form-group col-md-12">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>
                                                Status
                                            </label>
                                            @Html.DropDownListFor(model => model.EmployeeStatusId, lstEmployeeStatus, new { @placeholder = "Status", @class = "form-control", @required = "true", })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>
                                                Tanggal Bergabung
                                            </label>
                                            @Html.TextBoxFor(model => model.JoinDate, "{0:d MMM yyyy}", new { @placeholder = "Tanggal Bergabung", @class = "form-control", @required = "true", })
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>
                                                Department
                                            </label>
                                            @Html.DropDownListFor(model => model.DepartmentId, lstDepartments, new { @placeholder = "Department", @class = "form-control", @required = "true", })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>
                                                Unit
                                            </label>
                                            @Html.DropDownListFor(model => model.UnitId, lstUnit, new { @placeholder = "Unit", @class = "form-control", @required = "true", })
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>
                                                Title
                                            </label>
                                            @Html.DropDownListFor(model => model.TitleId, lstTitle, new { @placeholder = "Title", @class = "form-control", @required = "true", })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box box-primary">
                            <div class="box-header">
                                <label>Alamat KTP</label>
                            </div>
                            <div class="box-body no-padding">
                                <div class="col-md-4 no-padding">
                                    <div class="form-group col-md-12">
                                        <label>
                                            Identity Photo
                                        </label>
                                        <img class="profile-user-img img-responsive" id="imgIdentity" style="width:100% !important; margin-bottom:10px !important" src="@Url.Content("~/Assets/dist/img/default/no_image_rectangle.png")" alt="Identity Photo">

                                        <!-- image-preview-filename input [CUT FROM HERE]-->
                                        <div id="usrImagePreview" class="input-group image-preview">
                                            @Html.TextBoxFor(model => model.IdentityPicture, new { @class = "form-control image-preview-filename", @readonly = "true" })

                                            <span class="input-group-btn">
                                                <!-- image-preview-clear button -->
                                                <button id="btnClearIdentityPhoto" type="button" class="btn btn-default btn-flat image-preview-clear" style="display:none;">
                                                    <span class="glyphicon glyphicon-remove"></span> Clear
                                                </button>
                                                <!-- image-preview-input -->
                                                <div class="btn btn-default btn-flat image-preview-input">
                                                    <span class="glyphicon glyphicon-folder-open"></span>
                                                    <span id="btnBrowseIdentityTitle" class="image-preview-input-title">Browse</span>
                                                    <input id="fileIdentityPhoto" type="file" accept="image/jpeg" name="fileIdentityPhoto" />
                                                </div>
                                            </span>

                                            <script>
                                                $(function () {
                                                    // Create the close button
                                                    var closebtn = $('<button/>', {
                                                        type: "button",
                                                        text: 'x',
                                                        id: 'close-preview-Identity-image',
                                                        style: 'font-size: initial;',
                                                    });
                                                    closebtn.attr("class", "close pull-right");

                                                    // Set the popover default content
                                                    $('#usrImagePreview').popover({
                                                        trigger: 'manual',
                                                        html: true,
                                                        title: "<strong>Preview</strong>" + $(closebtn)[0].outerHTML,
                                                        content: "There's no image",
                                                        placement: 'bottom'
                                                    });

                                                    // Clear event
                                                    $('#btnClearIdentityPhoto').click(function () {
                                                        var img = $('#imgIdentity');

                                                        img.attr('src', '@Url.Content("~/Assets/dist/img/default/no_image_rectangle.png")');
                                                        $('#IdentityPicture').val("");
                                                        $('#btnClearIdentityPhoto').hide();
                                                        $('#fileIdentityPhoto').val("");
                                                        $('#btnBrowseIdentityTitle').text("Browse");

                                                    });

                                                    // Create the preview image
                                                    $("#fileIdentityPhoto").change(function () {
                                                        var img = $('#imgIdentity');
                                                        var file = this.files[0];
                                                        var reader = new FileReader();
                                                        // Set preview image into the popover data-content
                                                        reader.onload = function (e) {
                                                            $('#btnBrowseIdentityTitle').text("Change");
                                                            $("#btnClearIdentityPhoto").show();
                                                            $("#IdentityPicture").val(file.name);
                                                            img.attr('src', e.target.result);
                                                        }
                                                        reader.readAsDataURL(file);
                                                    });
                                                });
                                            </script>

                                        </div>
                                        <!-- /input-group image-preview [TO HERE]-->
                                    </div>
                                </div>

                                <div class="col-md-8">
                                    <div class="form-group col-md-12">
                                        <label>
                                            Nomor KTP
                                        </label>
                                        @Html.TextBoxFor(model => model.IdentityNumber, new { @placeholder = "Nomor KTP", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-12">
                                        <label>
                                            Alamat
                                        </label>
                                        @Html.TextAreaFor(model => model.IdentityAddress, new { @placeholder = "Alamat", @class = "form-control", @required = "true" })
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            Kelurahan / Desa
                                        </label>
                                        @Html.TextBoxFor(model => model.IdentitySubDistrict, new { @placeholder = "Kelurahan / Desa", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            Kecamatan
                                        </label>
                                        @Html.TextBoxFor(model => model.IdentityDistrict, new { @placeholder = "Kecamatan", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            Kota
                                        </label>
                                        @Html.TextBoxFor(model => model.IdentityCity, new { @placeholder = "Kota", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>
                                            Provinsi
                                        </label>
                                        @Html.TextBoxFor(model => model.IdentityProvince, new { @placeholder = "Provinsi", @class = "form-control", @required = "true", })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="box box-primary">
                            <div class="box-header">
                                <label>Alamat Tinggal</label>
                            </div>
                            <div class="box-body no-padding">
                                <div class="form-group col-md-12">
                                    <div class="form-group col-md-12">
                                        <label>
                                            Alamat
                                        </label>
                                        @Html.TextAreaFor(model => model.LivingAddress, new { @placeholder = "Alamat", @class = "form-control", @required = "true" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>
                                            Kelurahan / Desa
                                        </label>
                                        @Html.TextBoxFor(model => model.LivingSubDistrict, new { @placeholder = "Kelurahan / Desa", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>
                                            Kecamatan
                                        </label>
                                        @Html.TextBoxFor(model => model.LivingDistrict, new { @placeholder = "Kecamatan", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>
                                            Kota
                                        </label>
                                        @Html.TextBoxFor(model => model.LivingCity, new { @placeholder = "Kota", @class = "form-control", @required = "true", })
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>
                                            Provinsi
                                        </label>
                                        @Html.TextBoxFor(model => model.LivingProvince, new { @placeholder = "Provinsi", @class = "form-control", @required = "true", })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal-footer">
        <div class="form-group col-md-6 pull-right no-padding">
            <div class="form-group col-md-6">
                <button id="btnSubmit" type="submit" name="Save" class="form-control btn btn-success btn-flat">
                    <i class="fa fa-save"></i> &nbsp; Simpan
                </button>
            </div>
            <div class="form-group col-md-6">
                <button type="button" class="form-control btn btn-default btn-flat" onclick="fClose()">
                    <i class="fa fa-close"></i> &nbsp; Tutup
                </button>
            </div>
        </div>
    </div>
}

@Html.Partial("~/Views/Employee/_DriverLicenseForm.cshtml", null)

<script>

    $('#mdlInput').on('shown.bs.modal', function () {
        try {
            $('#EmployeDocumentId').val('-99')

            $('#JoinDate').datepicker({autoclose: true, format: 'dd MM yyyy'});
            $('#DateOfBirth').datepicker({autoclose: true, format: 'dd MM yyyy'});
            $('#LicenseExpiryDate').datepicker({autoclose: true, format: 'dd MM yyyy'});
            $('#DocumentExpiryDate').datepicker({autoclose: true, format: 'dd MM yyyy'});
        }
        catch (err) {
            swal({
                title: 'From Catch',
                text: err.message,
                type: 'warning'
            }).then(function () {
                fClose();
            })
        }
    });

    $('#frmInput').submit(function (e) {
        e.preventDefault();

        if ($("#dvRegisterAs").css('display') == 'block' && $("#RegisterAs").val() == "@((int)TTIS.WebUi.Common.TtisEnumeration.RegisterEmployeeAs.Driver)") {
            $("#mdlDriverLicense").modal('show');
            return false;
        } else {
            swal({
                title: 'Simpan..?',
                text: "Lanjutkan proses penyimpanan?",
                type: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ya',
                cancelButtonText: 'Batal'
            }).then((result) => {
                if (result.value) {
                    var form = $(this)[0];
                    var data = new FormData(form);

                    $.ajax({
                        url: '@Url.Action("PostAsync", "Employee")',
                        data: data,
                        type: "POST",
                        enctype: 'multipart/form-data',
                        processData: false,
                        contentType: false,
                        cache: false,
                        timeout: 600000,
                        success: function (data) {
                            if (data["isSuccess"]) {
                                swal({
                                    title: "Success...",
                                    text: data["message"],
                                    type: 'success'
                                }).then(function () {
                                    CloseModalInput('tblEmployeeList');
                                })
                            } else {
                                swal({
                                    title: "Oops, Something wrong with your Request\n\n Reference Number : " + data["referenceNumber"] + "\n\n",
                                    text: "Please safe the Reference Number and call your System Administrator.",
                                    type: 'warning'
                                })
                            }
                        },
                        error: function (xhr, status, error) {
                            swal({
                                title: window.location.href,
                                text: "( Error " + xhr.status + " ) - " + error,
                                type: 'warning'
                            }).then(function () {
                                CloseModalInput('tblEmployeeList');
                            })
                        }
                    });
                    return false;
                }
            });
        };
    });

</script>
